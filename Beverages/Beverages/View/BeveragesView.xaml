<Window x:Class="Beverages.View.BeveragesView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:Beverages.View"
        xmlns:behavior="clr-namespace:Beverages.Behaviors"
        xmlns:converters="clr-namespace:Beverages.Converters"
        xmlns:lex="http://wpflocalizeextension.codeplex.com"
        lex:LocalizeDictionary.DesignCulture="bg-BG"
        lex:ResxLocalizationProvider.DefaultAssembly="Beverages"
        lex:ResxLocalizationProvider.DefaultDictionary="Resources" 
        Title="{lex:Loc POS}" x:Name="MainWindow"
        Icon="Images\Icon_Coffee.png"
        MinHeight="550" MinWidth="650"
        Height="550" Width="650"
        Background="AliceBlue">

    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVisConverter" />
        <converters:LanguageConverter x:Key="resourceConvertor"/>
        <converters:WidthConverter x:Key="numberOfColumns" WindowWidth="900"/>
        <converters:WidthConverter x:Key="leftMargin" WindowWidth="1000"/>
        <Style x:Key="buttonStyle" TargetType="{x:Type Button}">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Background" Value="LightSteelBlue"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid x:Name="grid">
                            <Border x:Name="border" CornerRadius="8" BorderBrush="Gray" BorderThickness="1">
                                <Border.Background>
                                    <SolidColorBrush Color="LightSteelBlue"/>
                                </Border.Background>
                                <ContentPresenter HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"
                                                  TextElement.FontWeight="Normal"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border">
                                    <Setter.Value>
                                        <RadialGradientBrush GradientOrigin="0.496,1.052">
                                            <RadialGradientBrush.RelativeTransform>
                                                <TransformGroup>
                                                    <ScaleTransform CenterX="1" CenterY="1" ScaleX="1.5" ScaleY="1.5"/>
                                                </TransformGroup>
                                            </RadialGradientBrush.RelativeTransform>
                                            <GradientStop Color="#00000000" Offset="0.6"/>
                                            <GradientStop Color="AliceBlue" Offset="1"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="#FFD3D3D3"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" TargetName="grid" Value="0.25"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="buttonProductStyle" TargetType="{x:Type Button}">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Background" Value="LightSteelBlue"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid x:Name="grid">
                            <Border x:Name="border" CornerRadius="2" 
                                    BorderBrush="Black" BorderThickness="1"
                                    SnapsToDevicePixels="True">
                                <Border.Background>
                                    <SolidColorBrush Color="LightSteelBlue"/>
                                </Border.Background>
                                <ContentPresenter HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"
                                                  TextElement.FontWeight="Bold"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border">
                                    <Setter.Value>
                                        <SolidColorBrush Color="AliceBlue"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="#FFD3D3D3"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" TargetName="grid" Value="0.25"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ListBoxItemStyle" TargetType="ListBoxItem">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border Name="Bd"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}"
                                SnapsToDevicePixels="true">
                            <ContentPresenter/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive"
                                               Value="False" />
                                    <Condition Property="IsSelected"
                                               Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Background"
                                        TargetName="Bd"
                                        Value="AliceBlue" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive"
                                               Value="True" />
                                    <Condition Property="IsSelected"
                                               Value="True" />                                    
                                </MultiTrigger.Conditions>
                                <Setter Property="Background"
                                        TargetName="Bd"
                                        Value="AliceBlue" />
                            </MultiTrigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="Bd" Value="AliceBlue"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ChildListBoxItemStyle" TargetType="ListBoxItem">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border Name="Bd"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}"
                                SnapsToDevicePixels="true">
                            <ContentPresenter/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive"
                                               Value="False" />
                                    <Condition Property="IsSelected"
                                               Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Background"
                                        TargetName="Bd"
                                        Value="PowderBlue" />
                                <Setter Property="BorderBrush"
                                        TargetName="Bd"
                                        Value="AliceBlue" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive"
                                               Value="True" />
                                    <Condition Property="IsSelected"
                                               Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Background"
                                        TargetName="Bd"
                                        Value="PowderBlue" />
                                <Setter Property="BorderBrush"
                                        TargetName="Bd"
                                        Value="AliceBlue" />
                            </MultiTrigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="Bd" Value="PowderBlue"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    
    
    <Grid x:Name="MainGrid"> 
        
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="0.2*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="0.2*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="0.1*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
         
        <Button Name="Button_EditProducts" Grid.Row="0" Grid.Column="0" 
                VerticalAlignment="Center" Margin="15,5,0,0" 
                Style="{DynamicResource buttonStyle}" Content="{lex:Loc EditProducts}" 
                Command="{Binding Path=EditProductsCommand}"/>
        
        <Grid x:Name="LangGrid" Grid.Row="0" Grid.Column="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1.5*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>            
            <DockPanel Grid.Column="1" Margin="5,10,15,0">
                <Button Name="ButtonChangeLanguageEN" DockPanel.Dock="Left" 
                        HorizontalAlignment="Center" VerticalAlignment="Center"
                        Width="30" Height="20" Margin="10,0,10,0" Padding="0"
                        Command="{Binding Path=ChangeLanguageCommand}" 
                        CommandParameter="en-US">
                    <Image Source="Images\US_Flag.png"/>
                </Button>
                <Button Name="ButtonChangeLanguageBG" DockPanel.Dock="Right"
                        HorizontalAlignment="Center" VerticalAlignment="Center"
                         Width="30" Height="20" Margin="10,0,10,0" Padding="0"
                        Command="{Binding Path=ChangeLanguageCommand}" 
                        CommandParameter="bg-BG">
                    <Image Source="Images\BG_Flag.png"/>
                </Button>
            </DockPanel>                     
        </Grid>

        <ScrollViewer Grid.Row="1" Grid.Column="0" Margin="5,0,0,0" Focusable="False">
            
            <ItemsControl  ItemsSource="{Binding Beverages}" Focusable="False">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <UniformGrid>
                            <UniformGrid.Style>
                                <Style TargetType="{x:Type UniformGrid}">
                                    <Setter Property="Columns" Value="2"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=MainWindow, 
                                                                       Path=ActualWidth, 
                                                                       Converter={StaticResource numberOfColumns}}" 
                                                     Value="True">
                                            <Setter Property="Columns" Value="3"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </UniformGrid.Style>
                        </UniformGrid>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Button Name="ButtonBeverage" Margin="10" 
                                Style="{DynamicResource buttonProductStyle}"
                                Height="80" Width="107"
                                FontSize="13" FontWeight="Bold"
                                Content="{Binding Name, Converter={StaticResource resourceConvertor}}"
                                Command="{Binding RelativeSource={RelativeSource FindAncestor, 
                                                  AncestorType={x:Type ItemsControl}}, 
                                                  Path=DataContext.ChosenProductCommand}" 
                                CommandParameter="{Binding Path=.}"/>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </ScrollViewer>

        <ItemsControl Grid.Row="1" Grid.Column="2" Margin="5,0,0,0" 
                      ItemsSource="{Binding Addons}" Focusable="False">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <UniformGrid Columns="2" Width="280">
                        <UniformGrid.Style>
                            <Style TargetType="{x:Type UniformGrid}">
                                <Setter Property="Margin" Value="0"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=MainWindow, 
                                                                       Path=ActualWidth, 
                                                                       Converter={StaticResource leftMargin}}" 
                                                     Value="True">
                                        <Setter Property="Margin" Value="0,0,300,0"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </UniformGrid.Style>
                    </UniformGrid>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Button Name="ButtonAddon" Margin="10" 
                            Style="{DynamicResource buttonProductStyle}" 
                            Height="80" Width="107"
                            FontSize="15" FontWeight="Bold"
                            Content="{Binding Name, Converter={StaticResource resourceConvertor}}"
                            Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}, 
                                              Path=DataContext.ChosenProductCommand}" 
                            CommandParameter="{Binding Path=.}"/>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
        
        
        <DockPanel Name="DockPanelTotalPrice" Grid.Column="0"
                   Grid.Row="2" HorizontalAlignment="Right">
            <DockPanel.Style>
                <Style TargetType="{x:Type DockPanel}">
                    <Setter Property="Grid.ColumnSpan" Value="2"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=MainWindow, 
                                                       Path=ActualWidth, 
                                                       Converter={StaticResource leftMargin}}"
                                     Value="True">
                            <Setter Property="Grid.ColumnSpan" Value="1"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DockPanel.Style>
            <Viewbox Name="ViewboxTotalText" DockPanel.Dock="Left">
                <TextBlock Text="{lex:Loc Key=Total}"/>
            </Viewbox>
            <Viewbox Name="ViewboxTotalPrice">
                <TextBlock Text="{Binding Total, StringFormat={}{0:f2}}"/>
            </Viewbox>
            <Viewbox Name="ViewboxTotalCurrency" DockPanel.Dock="Right">
                <TextBlock Text="{lex:Loc Currency}"/>
            </Viewbox>
        </DockPanel>
        
        
        <ScrollViewer Name="ScrollViewOrders" Grid.Column="0" 
                      Grid.ColumnSpan="2" Grid.Row="3"
                      Margin="15,0,0,0" BorderThickness="5" 
                      Background="LightSteelBlue">
            <ListBox Name="OuterListBox" ItemsSource="{Binding Path=Orders}"
                     ItemContainerStyle="{DynamicResource ListBoxItemStyle}"
                     HorizontalContentAlignment="Stretch" FontSize="18" MaxWidth="500"
                     behavior:ListBoxSelectionBehavior.ClickSelection="True"
                     behavior:ListBoxScrollBehavior.ScrollOnNewItem="True"
                     SelectedItem="{Binding Path=SelectedOrder, Mode=TwoWay}">
                
                <ListBox.Template>
                    <ControlTemplate>
                        <ItemsPresenter />
                    </ControlTemplate>
                </ListBox.Template>
                <ListBox.ItemTemplate>
                <DataTemplate>
                    <DockPanel LastChildFill="False">

                            <ListBox Name="ChildListBox" DockPanel.Dock="Bottom" 
                                 Margin="30,0,30,0"
                                 ItemContainerStyle="{DynamicResource ChildListBoxItemStyle}"
                                 HorizontalContentAlignment="Stretch"
                                 behavior:ListBoxSelectionBehavior.ClickSelection="True"
                                 behavior:ListBoxScrollBehavior.ScrollOnNewItem="True"
                                 ItemsSource="{Binding Path=AddonsToBeverage}" 
                                 SelectedItem="{Binding Path=DataContext.SelectedAddon, 
                                                        ElementName=OuterListBox, 
                                                        Mode=TwoWay}">
                                <ListBox.Template>
                                    <ControlTemplate>
                                        <ItemsPresenter/>
                                    </ControlTemplate>
                                </ListBox.Template>
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <DockPanel LastChildFill="False">
                                            <TextBlock Text="{Binding Name, Converter={StaticResource resourceConvertor}}"
                                                       DockPanel.Dock="Left"/>
                                            <TextBlock Text="{Binding Price, StringFormat={}{0:f2}}" DockPanel.Dock="Right"/>
                                        </DockPanel>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        
                        <TextBlock  Text="{Binding Name, Converter={StaticResource resourceConvertor}}"
                                    DockPanel.Dock="Left"/>
                        <TextBlock Text="{Binding Price, StringFormat={}{0:f2}}"
                                   DockPanel.Dock="Right"/>
                        
                    </DockPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
        </ScrollViewer>
        
        <Grid Grid.Column="3" Grid.Row="3">
            
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>            
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            
            <Button Name="ButtonDeleteSelected" 
                    Grid.Column="0" Grid.Row="1" 
                    Style="{DynamicResource buttonStyle}"
                    Margin="25,15,15,15" Width="107" Height="35"
                    Content="{lex:Loc Delete}"
                    Command="{Binding Path=DeleteSelectedItemCommand}"/>
            <Button Name="ButtonDeleteAll" 
                    Grid.Column="0" Grid.Row="2" 
                    Style="{DynamicResource buttonStyle}"
                    Margin="25,15,15,15" Width="107" Height="35"
                    Content="{lex:Loc ClearOrder}" 
                    Command="{Binding Path=DeleteAllCommand}"/>
            <Button Name="ButtonFinalize" 
                    Grid.Column="1" Grid.Row="2" 
                    Style="{DynamicResource buttonStyle}"
                    Margin="20,15,15,15" Width="107" Height="35"
                    Content="{lex:Loc FinalizeOrder}" 
                    Command="{Binding Path=FinalizeCommand}"/>
            
        </Grid>
         
    </Grid>
    
</Window>
