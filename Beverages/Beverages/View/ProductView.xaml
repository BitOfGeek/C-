<Window x:Class="Beverages.View.ProductView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:behavior="clr-namespace:Beverages.Behaviors"
        xmlns:converters="clr-namespace:Beverages.Converters"
        xmlns:lex="http://wpflocalizeextension.codeplex.com"
        lex:LocalizeDictionary.DesignCulture="bg-BG"    
        lex:ResxLocalizationProvider.DefaultAssembly="Beverages"    
        lex:ResxLocalizationProvider.DefaultDictionary="Resources" 
        Title="{lex:Loc POS}"
        WindowState="Normal"
        MinHeight="300" MinWidth="400"
        Height="300" Width="400">
    
    <Window.Resources>
        <converters:MultiValueConverter x:Key="valueConverter"/>
        <converters:LanguageConverter x:Key="resourceConvertor"/>
        <Style x:Key="buttonStyle" TargetType="{x:Type Button}">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Background" Value="LightSteelBlue"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid x:Name="grid">
                            <Border x:Name="border" CornerRadius="8" BorderBrush="Gray" BorderThickness="1">
                                <Border.Background>
                                    <SolidColorBrush Color="LightSteelBlue"/>
                                </Border.Background>
                                <ContentPresenter HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"
                                                  TextElement.FontWeight="Normal"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border">
                                    <Setter.Value>
                                        <RadialGradientBrush GradientOrigin="0.496,1.052">
                                            <RadialGradientBrush.RelativeTransform>
                                                <TransformGroup>
                                                    <ScaleTransform CenterX="1" CenterY="1" ScaleX="1.5" ScaleY="1.5"/>
                                                </TransformGroup>
                                            </RadialGradientBrush.RelativeTransform>
                                            <GradientStop Color="#00000000" Offset="0.6"/>
                                            <GradientStop Color="AliceBlue" Offset="1"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="#FFD3D3D3"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" TargetName="grid" Value="0.25"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="tabStyle" TargetType="TabItem"> 
            <Setter Property="Template">
                <Setter.Value> 
                    <ControlTemplate TargetType="TabItem">
                        <Border Name="bd"
                                Background="LightSteelBlue"
                                BorderThickness="1"
                                BorderBrush="LightSteelBlue"
                                CornerRadius="0,10,0,0" Margin="0">
                            <ContentPresenter ContentSource="Header" 
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="bd" Property="Background" Value="AliceBlue"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="bd" Property="Background" Value="AliceBlue"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ListBoxItemStyle" TargetType="ListBoxItem">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border Name="Bd"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}"
                                SnapsToDevicePixels="true">
                            <ContentPresenter/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive"
                                               Value="False" />
                                    <Condition Property="IsSelected"
                                               Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Background"
                                        TargetName="Bd"
                                        Value="AliceBlue" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive"
                                               Value="True" />
                                    <Condition Property="IsSelected"
                                               Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Background"
                                        TargetName="Bd"
                                        Value="AliceBlue" />
                            </MultiTrigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="Bd" Value="AliceBlue"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    
    <Grid>
        <TabControl Background="AliceBlue">

            <TabItem Header="{lex:Loc AddProduct}" Width="100" Style="{DynamicResource tabStyle}">
                <DockPanel LastChildFill="False">
                    <StackPanel DockPanel.Dock="Top" Margin="10, 15, 100, 0" Background="LightSteelBlue">
                        <GroupBox Header="{lex:Loc NewName}" Margin="0,5,0,0">                           
                            <TextBox Name="TextBox_NewProductName"/>
                        </GroupBox>
                        <GroupBox Header="{lex:Loc NewNameBG}" Margin="0,5,0,0">
                            <TextBox Name="TextBox_NewProductNameBG"/>
                        </GroupBox>
                        <GroupBox Header="{lex:Loc NewPrice}" Margin="0,5,0,0">
                            <TextBox Name="TextBox_NewProductPrice">
                                <i:Interaction.Behaviors>
                                    <behavior:TextBoxInputBehavior InputMode="DoubleInput"/>
                                </i:Interaction.Behaviors>
                            </TextBox>
                        </GroupBox>                       
                    </StackPanel>
                    <Button DockPanel.Dock="Bottom" Margin="290, 0, 15, 30"
                            Height="30"
                            Style="{DynamicResource buttonStyle}"
                            Content="{lex:Loc AddProduct}" 
                            Command="{Binding AddNewProductCommand}">
                        <Button.CommandParameter>
                            <MultiBinding Converter="{StaticResource valueConverter}">
                                <Binding Path="Text" ElementName="TextBox_NewProductName"/>
                                <Binding Path="Text" ElementName="TextBox_NewProductNameBG"/>
                                <Binding Path="Text" ElementName="TextBox_NewProductPrice"/>
                            </MultiBinding>
                        </Button.CommandParameter>
                    </Button> 
                </DockPanel>
            </TabItem>

            <TabItem Header="{lex:Loc EditDelete}" Width="170" Style="{DynamicResource tabStyle}">
                <Grid>
                    
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    
                    <ScrollViewer Grid.Column="0" Margin="5">
                        <ListBox Name="ListBoxEdit" Background="LightSteelBlue"
                                 ItemContainerStyle="{DynamicResource ListBoxItemStyle}"
                                 ItemsSource="{Binding Beverages}"
                                 behavior:ListBoxSelectionBehavior.ClickSelection="True"
                                 behavior:ListBoxScrollBehavior.ScrollOnNewItem="True"
                                 SelectedItem="{Binding Path=SelectedProduct, Mode=TwoWay}">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Name, Converter={StaticResource resourceConvertor}}"/>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </ScrollViewer>
                    
                    <DockPanel Grid.Column="1" LastChildFill="False">
                        <StackPanel DockPanel.Dock="Top" Margin="5" Background="LightSteelBlue">
                            <GroupBox Header="{lex:Loc NameEN}" Margin="0,5,0,0">
                                <TextBox Name="TextBoxName" 
                                         Text="{Binding SelectedItem.Name, ElementName=ListBoxEdit, Mode=OneWay}"/>
                            </GroupBox>
                            <GroupBox Header="{lex:Loc NameBG}" Margin="0,5,0,0">
                                <TextBox Name="TextBoxNameBG" 
                                         Text="{Binding SelectedItem.Name,
                                                        ElementName=ListBoxEdit, 
                                                        Converter={StaticResource resourceConvertor}, 
                                                        Mode=OneWay}"/>
                            </GroupBox>
                            <GroupBox Header="{lex:Loc Price}" Margin="0,5,0,0">
                                <TextBox Name="TextBoxPrice" 
                                         Text="{Binding SelectedItem.Price,Mode=OneWay, 
                                                        ElementName=ListBoxEdit, 
                                                        StringFormat={}{0:F2}}">
                                    <i:Interaction.Behaviors>
                                        <behavior:TextBoxInputBehavior InputMode="DoubleInput"/>
                                    </i:Interaction.Behaviors>
                                </TextBox>
                            </GroupBox>
                        </StackPanel>

                        <Grid DockPanel.Dock="Bottom">
                            
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <Button Grid.Column="1" Grid.Row="1" 
                                    Height="30" Margin="10,5,10,10"
                                    Style="{DynamicResource buttonStyle}"
                                    Content="{lex:Loc Delete}"
                                    Command="{Binding DeleteSelectedProductCommand}"/>
                            <Button Grid.Column="1" Grid.Row="0" 
                                    Height="30" Margin="10,5,10,10" 
                                    Style="{DynamicResource buttonStyle}"
                                    Content="{lex:Loc ClearOrder}"
                                    Command="{Binding ClearSelectedProductCommand}"/>
                            <Button Grid.Column="0" Grid.Row="1" 
                                    Height="30" Margin="10,5,10,10"
                                    Style="{DynamicResource buttonStyle}"
                                    Content="{lex:Loc Save}"
                                    Command="{Binding SaveSelectedProductCommand}">
                                <Button.CommandParameter>
                                    <MultiBinding Converter="{StaticResource valueConverter}">
                                        <Binding Path="Text" ElementName="TextBoxName"/>
                                        <Binding Path="Text" ElementName="TextBoxNameBG"/>
                                        <Binding Path="Text" ElementName="TextBoxPrice"/>
                                    </MultiBinding>
                                </Button.CommandParameter>
                            </Button>
                        </Grid>
                    </DockPanel>
                        
                </Grid>
            </TabItem>
        </TabControl>
        
    </Grid>
</Window>
